<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://cxf.apache.org/jaxws
        http://cxf.apache.org/schemas/jaxws.xsd">

    <!--启用spring注解-->
    <context:annotation-config/>

    <!--配置注解驱动-->
    <mvc:annotation-driven/>

    <!--自动扫描该包-->
    <context:component-scan base-package="com.xiekongye">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--静态资源映射-->
    <!--本项目把静态资源放在了WEB-INF的statics目录下，资源映射如下-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/statics/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/statics/js/"/>
    <mvc:resources mapping="/image/**" location="/WEB-INF/statics/image/"/>

    <!--可以配置多个视图解析器-->
    <!--freemarker视图解析器-->
    <bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <!--此变量为pageContext.request，页面使用的时候为:rc.contextPath-->
        <property name="requestContextAttribute" value="rc"/>
    </bean>

    <!--freemarker模板路径-->
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--模板加载路径-->
        <property name="templateLoaderPath" value="WEB-INF/ftl"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="defaultEncoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!---->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!--设置JSP文件的目录位置-->
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- springmvc文件上传需要配置的节点-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20971500"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>

    <!--CXF配置-->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <jaxws:endpoint id="testWS" implementor="com.xiekongye.ws.GetOrderDetailImpl" address="/getOrderDetail"/>

    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--<entry key="json" value="application/json"/>-->
                <!--<entry key="xml" value="text/xml"/>-->
                <!--<entry key="html" value="text/html"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultContentType" value="text/html"/>-->
    <!--</bean>-->

    <!--Apache Tiles配置-->
    <!--<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/>-->
    <!--<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">-->
        <!--<property name="definitions">-->
            <!--<list>-->
                <!--<value>/WEB-INF/views/**/views.xml</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--Quertz定时任务-->
    <!--<bean id="jobBean" class="com.xiekongye.job.MyJobDemo"/>-->
    <!--<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="jobBean"/>-->
        <!--<property name="targetMethod" value="printDate"/>-->
        <!--<property name="concurrent" value="false"/>-->
    <!--</bean>-->

    <!--<bean id="jobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">-->
        <!--<property name="jobDetail" ref="jobDetail"/>-->
        <!--<property name="cronExpression">-->
            <!--<value>0/5 * * * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--调度工厂-->
    <!--<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="triggers">-->
            <!--<list>-->
                <!--&lt;!&ndash;调度列表&ndash;&gt;-->
                <!--<ref bean="jobTrigger"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--RMI服务-->
    <!--<bean class="org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter"-->
          <!--p:baseAddress="http://localhost:8888/services"-->
    <!--/>-->

    <!--消息队列相关-->
    <!--<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">-->
        <!--&lt;!&ndash;代理地址&ndash;&gt;-->
        <!--<property name="brokerURL" value="tcp://localhost:61616"/>-->
    <!--</bean>-->

    <!--<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue">-->
        <!--<constructor-arg value="demo.queue"/>-->
    <!--</bean>-->

    <!--<bean id="topic" class="org.apache.activemq.command.ActiveMQTopic">-->
        <!--<constructor-arg value="demo.topic"/>-->
    <!--</bean>-->

    <!--使用命名空间的方式配置ActiveMQ的连接工厂-->
    <!--<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616"/>-->

    <!--<amq:queue id="queue" physicalName="demo.queue"/>-->
    <!--<amq:topic id="topic" physicalName="demo.topic"/>-->
</beans>